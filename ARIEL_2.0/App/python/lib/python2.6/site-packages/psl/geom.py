
import math

class Rectangle:

    def __init__(self,x1,y1,x2,y2):
        self.x1 = x1
        self.x2 = x2
        self.y1 = y1
        self.y2 = y2

    def containsPoint(self, x, y):
#        print "CHECK IF ",x,y
#        print "X1 Y1 X2 Y2",self.x1, self.y1, self.x2, self.y2
#        if  x >= self.x1 and x <= self.x2 and y >= self.y1 and y <= self.y2:
#            print "YES"
#        else:
            
#            print "NO"
        return x >= self.x1 and x <= self.x2 and y >= self.y1 and y <= self.y2


def getGLDegreesFromRadians(rad):
    deg = rad * 180/math.pi
    deg *= -1
    deg += 90
    return deg

def getArcFromDistance(hyp,rise):
    return math.asin(rise/float(hyp))

def getPoint(p1,angle,distance):
    x1 = p1[0]
    y1 = p1[1]
    x2 = x1 + distance * math.cos(angle)
    y2 = y1 + distance * math.sin(angle)
    return (x2,y2)

def extendLine(p1,p2,pixels):
    dist = getDistance(p1,p2)
    dx = (p2[0] - p1[0])*(pixels+dist)/dist
    dy = (p2[1] - p1[1])*(pixels+dist)/dist
    return (p1[0]+dx,p1[1]+dy)

def getDistance(p1,p2):
    x1 = p1[0]
    y1 = p1[1]
    x2 = p2[0]
    y2 = p2[1]
    dx = x2 - x1
    dy = y2 - y1
    return math.sqrt(dx*dx+dy*dy)

def averageAngles(angles):
    ax = 0.0
    ay = 0.0
    for a in angles:
        p = getPoint((0,0),a,1.0)
        ax += p[0]
        ay += p[1]
    return getAngle((0,0),(ax/len(angles),ay/len(angles)))

def getAngle(p1,p2):
    x1 = p1[0]
    y1 = p1[1]
    x2 = p2[0]
    y2 = p2[1]

    dx = x2 - x1 + 0.0000001
    dy = y2 - y1
    angle = math.atan(abs(dy/float(dx)))

    if dx > 0 and dy == 0:
        angle = 0
    if dx < 0 and dy == 0:
        angle = math.pi
    if dx > 0 and dy < 0:
	angle = angle * -1
    if dx < 0 and dy < 0:
	angle = angle + math.pi
    if dx < 0 and dy > 0:
	angle = angle * -1 
	angle = angle + math.pi

    return angle

